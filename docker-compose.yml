version: '3.8'

services:
  # Database Services
  postgres-auth:
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: auth
    ports:
      - '5432:5432'
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data

  postgres-users:
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: users
    ports:
      - '5433:5432'
    volumes:
      - postgres-users-data:/var/lib/postgresql/data

  postgres-posts:
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: posts
    ports:
      - '5434:5432'
    volumes:
      - postgres-posts-data:/var/lib/postgresql/data

  mongodb-comments:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongodb-comments-data:/data/db

  mongodb-notifications:
    image: mongo:latest
    ports:
      - '27018:27017'
    volumes:
      - mongodb-notifications-data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ports:
      - '9200:9200'
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  influxdb:
    image: influxdb:latest
    ports:
      - '8086:8086'
    volumes:
      - influxdb-data:/var/lib/influxdb

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - auth-service
      - gateway-service

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'

  # Microservices
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    depends_on:
      - postgres-auth
    environment:
      - DB_HOST=postgres-auth
      - DB_PORT=5432
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_DATABASE=auth
      - JWT_SECRET=1234567890

  # users-service:
  #   build:
  #     context: ./services/users
  #     dockerfile: Dockerfile
  #   ports:
  #     - '3002:3002'
  #   depends_on:
  #     - postgres-users
  #   environment:
  #     - DB_HOST=postgres-users
  #     - DB_PORT=5432
  #     - DB_USERNAME=users_user
  #     - DB_PASSWORD=users_password
  #     - DB_DATABASE=users_db

  # posts-service:
  #   build:
  #     context: ./services/posts
  #     dockerfile: Dockerfile
  #   ports:
  #     - '3003:3003'
  #   depends_on:
  #     - postgres-posts
  #   environment:
  #     - DB_HOST=postgres-posts
  #     - DB_PORT=5432
  #     - DB_USERNAME=posts_user
  #     - DB_PASSWORD=posts_password
  #     - DB_DATABASE=posts_db

  # comments-service:
  #   build:
  #     context: ./services/comments
  #     dockerfile: Dockerfile
  #   ports:
  #     - '3004:3004'
  #   depends_on:
  #     - mongodb-comments
  #   environment:
  #     - MONGODB_URI=mongodb://mongodb-comments:27017/comments

  # notifications-service:
  #   build:
  #     context: ./services/notifications
  #     dockerfile: Dockerfile
  #   ports:
  #     - '3005:3005'
  #   depends_on:
  #     - mongodb-notifications
  #     - rabbitmq
  #   environment:
  #     - MONGODB_URI=mongodb://mongodb-notifications:27017/notifications
  #     - RABBITMQ_URL=amqp://rabbitmq:5672

  # search-service:
  #   build:
  #     context: ./services/search
  #     dockerfile: Dockerfile
  #   ports:
  #     - '3006:3006'
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     - ELASTICSEARCH_URL=http://elasticsearch:9200

  # analytics-service:
  #   build:
  #     context: ./services/analytics
  #     dockerfile: Dockerfile
  #   ports:
  #     - '3007:3007'
  #   depends_on:
  #     - influxdb
  #   environment:
  #     - INFLUXDB_URL=http://influxdb:8086

  gateway-service:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - auth-service
    environment:
      - AUTH_SERVICE_HOST=auth-service
      - AUTH_SERVICE_PORT=3001

volumes:
  postgres-auth-data:
  postgres-users-data:
  postgres-posts-data:
  mongodb-comments-data:
  mongodb-notifications-data:
  elasticsearch-data:
  influxdb-data:
  rabbitmq-data:
  grafana-data:
